{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asoobrat\\\\Documents\\\\Trainings\\\\react\\\\react2023\\\\jsx\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from \"react\";\nimport AnimalShow from \"./AnimalShow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getRandomAnimal() {\n  const animals = [\"bird\", \"cat\", \"cow\", \"dog\", \"gator\", \"horse\"];\n  const randomIndex = Math.floor(Math.random() * animals.length);\n  return animals[randomIndex];\n}\nfunction App() {\n  _s();\n  const [animals, setAnimals] = useState([]);\n  const [totalClicks, setTotalClicks] = useState(0);\n  const handleClick = () => {\n    setAnimals([...animals, getRandomAnimal()]);\n  };\n  const handleTotalClick = () => {\n    setTotalClicks(totalClicks + 1);\n  };\n  const renderedAnimals = animals.map((element, index) => {\n    return /*#__PURE__*/_jsxDEV(AnimalShow, {\n      animal: element\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        onClick: handleClick,\n        children: \"Add Animal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          paddingLeft: '15px'\n        },\n        children: [\"Number of clicks : \", totalClicks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      onClick: handleTotalClick,\n      children: renderedAnimals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"aaxBE/UopC+SlBTN4oESqILYRJw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","AnimalShow","getRandomAnimal","animals","randomIndex","Math","floor","random","length","App","setAnimals","totalClicks","setTotalClicks","handleClick","handleTotalClick","renderedAnimals","map","element","index","display","alignItems","paddingLeft"],"sources":["C:/Users/asoobrat/Documents/Trainings/react/react2023/jsx/src/App.js"],"sourcesContent":["import './App.css'\r\nimport { useState } from \"react\"\r\nimport AnimalShow from \"./AnimalShow\"\r\n\r\nfunction getRandomAnimal() {\r\n  const animals = [\"bird\", \"cat\", \"cow\", \"dog\", \"gator\", \"horse\"]\r\n  const randomIndex = Math.floor(Math.random() * animals.length)\r\n  return animals[randomIndex]\r\n}\r\nfunction App(){\r\n  const [animals, setAnimals] = useState([])\r\n  const [totalClicks, setTotalClicks] = useState(0)\r\n\r\n  const handleClick = () => {\r\n    setAnimals([...animals, getRandomAnimal()])\r\n  }\r\n\r\n  const handleTotalClick = () => {\r\n    setTotalClicks(totalClicks + 1)\r\n  }\r\n\r\n  const renderedAnimals = animals.map((element, index) =>{\r\n    return <AnimalShow key={index} animal={element} />\r\n  })\r\n\r\n  return(\r\n    <>\r\n      <div className=\"box\" style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <button className=\"button is-primary\" onClick={handleClick}>Add Animal</button>\r\n        <h1 style={{ paddingLeft: '15px' }}>Number of clicks : {totalClicks}</h1>\r\n      </div>\r\n      <div className=\"box\" onClick={handleTotalClick}>\r\n        {renderedAnimals}\r\n      </div>\r\n    </>   \r\n  )\r\n}\r\n\r\nexport default App"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAA;AAAA;AAErC,SAASC,eAAe,GAAG;EACzB,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC;EAC/D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,OAAO,CAACK,MAAM,CAAC;EAC9D,OAAOL,OAAO,CAACC,WAAW,CAAC;AAC7B;AACA,SAASK,GAAG,GAAE;EAAA;EACZ,MAAM,CAACN,OAAO,EAAEO,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMa,WAAW,GAAG,MAAM;IACxBH,UAAU,CAAC,CAAC,GAAGP,OAAO,EAAED,eAAe,EAAE,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMY,gBAAgB,GAAG,MAAM;IAC7BF,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;EACjC,CAAC;EAED,MAAMI,eAAe,GAAGZ,OAAO,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAI;IACrD,oBAAO,QAAC,UAAU;MAAa,MAAM,EAAED;IAAQ,GAAvBC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAqB;EACpD,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,KAAK;MAAC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA,wBACpE;QAAQ,SAAS,EAAC,mBAAmB;QAAC,OAAO,EAAEP,WAAY;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,eAC/E;QAAI,KAAK,EAAE;UAAEQ,WAAW,EAAE;QAAO,CAAE;QAAA,WAAC,qBAAmB,EAACV,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACrE,eACN;MAAK,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEG,gBAAiB;MAAA,UAC5CC;IAAe;MAAA;MAAA;MAAA;IAAA,QACZ;EAAA,gBACL;AAEP;AAAC,GA3BQN,GAAG;AAAA,KAAHA,GAAG;AA6BZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}